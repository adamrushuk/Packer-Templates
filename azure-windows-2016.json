{
  "variables": {
    "location": "uksouth",
    "resource_group_name": "packertest-rg",
    "image_name": "Win2016Ansible",
    "vm_size": "Standard_DS2_v2",
    "tenant_id": "{{env `ARM_TENANT_ID`}}",
    "subscription_id": "{{env `ARM_SUBSCRIPTION_ID`}}",
    "client_id": "{{env `ARM_CLIENT_ID`}}",
    "client_secret": "{{env `ARM_CLIENT_SECRET`}}"
  },
  "builders": [
    {
      "type": "azure-arm",
      "tenant_id": "{{user `tenant_id`}}",
      "subscription_id": "{{user `subscription_id`}}",
      "client_id": "{{user `client_id`}}",
      "client_secret": "{{user `client_secret`}}",
      "managed_image_resource_group_name": "{{user `resource_group_name`}}",
      "managed_image_name": "{{user `image_name`}}",
      "os_type": "Windows",
      "image_publisher": "MicrosoftWindowsServer",
      "image_offer": "WindowsServer",
      "image_sku": "2012-R2-Datacenter",
      "communicator": "winrm",
      "winrm_use_ssl": "true",
      "winrm_insecure": "true",
      "winrm_timeout": "1h",
      "winrm_username": "packer",
      "winrm_password": "SuperSecretPa55w0rd!",
      "location": "{{user `location`}}",
      "vm_size": "{{user `vm_size`}}"
    }
  ],
  "provisioners": [
    {
      "type": "powershell",
      "environment_vars": "WINRM_PASSWORD={{.WinRMPassword}}",
      "inline": [
        "Write-Host \"Automatically generated password is: $env:WINRM_PASSWORD\""
      ]
    },
    {
      "type": "powershell",
      "inline": [
        "Get-Date -Format FileDateTime",
        "write-output \"Starting provisioners\"",
        "write-output \"Running WinRM Quick Config\"",
        "winrm quickconfig -q"
      ]
    },
    {
      "type": "powershell",
      "scripts": [
        "scripts/ConfigureRemotingForAnsible.ps1"
      ]
    },
    {
      "type": "powershell",
      "inline": "Invoke-RestMethod -Headers @{\"Metadata\"=\"true\"} -URI 'http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-08-01&format=text' | Out-File -Append -Encoding utf8 C:/Windows/Temp/ip-address"
    },
    {
      "type": "file",
      "direction": "download",
      "source": "C:/Windows/Temp/ip-address",
      "destination": "./ansible/hosts"
    },
    {
      "type": "shell-local",
      "inline": [
        "IP=`cut -b 4- ansible/hosts`",
        "echo -e \"[default]\\n${IP}\" > ansible/hosts"
      ]
    },
    {
      "type": "ansible",
      "playbook_file": "ansible/playbook.yml",
      "user": "packer",
      "ansible_env_vars": [
        "WINRMPASS={{.WinRMPassword}}"
      ],
      "extra_arguments": [
        "--connection", "packer",
        "-vvvvv",
        "--extra-vars",
        "ansible_shell_type=powershell ansible_shell_executable=None"
      ]
    },
    {
      "type": "powershell",
      "inline": [
        "(gcim win32_service | ? { $_.name -match 'WindowsAzureGuestAgent' }).PathName",
        "get-service WindowsAzureGuestAgent | ft -autosize"
      ]
    },
    {
      "type": "powershell",
      "inline": [
        "# NOTE: the following *3* lines are only needed if the you have installed the Guest Agent.",
        "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "while ((Get-Service WindowsAzureTelemetryService).Status -ne 'Running') { Start-Sleep -s 5 }",
        "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "if( Test-Path $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml ){ rm $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml -Force}",
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; Write-Output $imageState.ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Start-Sleep -s 10 } else { break } }"
      ]
    }
  ]
}
