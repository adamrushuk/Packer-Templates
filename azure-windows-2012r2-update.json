{
  "variables": {
    "location": "uksouth",
    "resource_group_name": "packertest-rg",
    "image_name": "Win2012withUpdates",
    "vm_size": "Standard_DS2_v2",
    "tenant_id": "{{env `ARM_TENANT_ID`}}",
    "subscription_id": "{{env `ARM_SUBSCRIPTION_ID`}}",
    "client_id": "{{env `ARM_CLIENT_ID`}}",
    "client_secret": "{{env `ARM_CLIENT_SECRET`}}"
  },
  "builders": [
    {
      "type": "azure-arm",
      "tenant_id": "{{user `tenant_id`}}",
      "subscription_id": "{{user `subscription_id`}}",
      "client_id": "{{user `client_id`}}",
      "client_secret": "{{user `client_secret`}}",
      "managed_image_resource_group_name": "{{user `resource_group_name`}}",
      "managed_image_name": "{{user `image_name`}}",
      "os_type": "Windows",
      "image_publisher": "MicrosoftWindowsServer",
      "image_offer": "WindowsServer",
      "image_sku": "2012-R2-Datacenter",
      "communicator": "winrm",
      "winrm_use_ssl": "true",
      "winrm_insecure": "true",
      "winrm_timeout": "20m",
      "winrm_username": "packer",
      "location": "{{user `location`}}",
      "vm_size": "{{user `vm_size`}}"
    }
  ],
  "provisioners": [
    {
      "type": "powershell",
      "environment_vars": "WINRM_PASSWORD={{.WinRMPassword}}",
      "inline": [
        "Write-Host \"Automatically generated password is: $env:WINRM_PASSWORD\""
      ]
    },
    {
      "type": "windows-update"
    },
    {
      "type": "powershell",
      "inline": [
        "# NOTE: the following *3* lines are only needed if the you have installed the Guest Agent.",
        "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "while ((Get-Service WindowsAzureTelemetryService).Status -ne 'Running') { Start-Sleep -s 5 }",
        "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "if( Test-Path $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml ){ rm $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml -Force}",
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; Write-Output $imageState.ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Start-Sleep -s 10 } else { break } }"
      ]
    }
  ]
}
